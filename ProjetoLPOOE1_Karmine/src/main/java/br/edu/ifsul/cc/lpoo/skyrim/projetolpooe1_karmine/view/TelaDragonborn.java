/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifsul.cc.lpoo.skyrim.projetolpooe1_karmine.view;

import br.edu.ifsul.cc.lpoo.skyrim.projetolpooe1_karmine.dao.PersistenciaJPA;
import br.edu.ifsul.cc.lpoo.skyrim.projetolpooe1_karmine.model.Dragonborn;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author 20221PF.CC0033
 */
public class TelaDragonborn extends javax.swing.JFrame {

    /**
     * Creates new form TelaDragonborn
     */
    private PersistenciaJPA jpa;
    private DefaultListModel<String> mod;

    public TelaDragonborn() {
        initComponents();
        jpa = new PersistenciaJPA();
        mod = new DefaultListModel<>();
        lstDragonborn.setModel(mod);
        listarDragonborn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void listarDragonborn() {
        mod.clear();
        List<Dragonborn> dragonborn = jpa.getDragonborn();
        for (Dragonborn d : dragonborn) {
            mod.addElement(d.getNome());
        }
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDragonborn = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDragonborn = new javax.swing.JList<>();
        btnEditar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnMissao = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDragonborn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDragonborn.setText("DragonBorn");

        jScrollPane1.setViewportView(lstDragonborn);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnMissao.setText("Adicionar Missão");

        btnConsultar.setText("Consultar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNovo)
                        .addGap(12, 12, 12)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemover))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnMissao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(lblDragonborn)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lblDragonborn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMissao)
                        .addGap(18, 18, 18)
                        .addComponent(btnConsultar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnEditar)
                    .addComponent(btnRemover))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        btnMissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMissaoActionPerformed(evt);
            }
        });
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        String dragonbornSelecionado = lstDragonborn.getSelectedValue();

        if (dragonbornSelecionado != null) {
            String novoNome = JOptionPane.showInputDialog(this, "Digite a nova descrição da modalidade:", dragonbornSelecionado);

            if (novoNome != null && !novoNome.trim().isEmpty()) {
                try {
                    if (!jpa.conexaoAberta()) {
                        jpa = new PersistenciaJPA();
                    }

                    List<Dragonborn> modalidades = jpa.getDragonborn();
                    for (Dragonborn d : modalidades) {
                        if (d.getNome().equals(dragonbornSelecionado)) {
                            d.setNome(novoNome);
                            jpa.persist(d);
                            break;
                        }
                    }

                    JOptionPane.showMessageDialog(this, "Dragonborn editado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Erro ao editar o Dragonborn: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                }
                listarDragonborn();
            } else {
                JOptionPane.showMessageDialog(this, "O novo nome do Dragonborn não pode ser vazia.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Dragonborn para editar.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String dragonbornSelecionado = lstDragonborn.getSelectedValue();
        if (dragonbornSelecionado != null) {
            List<Dragonborn> dragonborn = jpa.getDragonborn();
            for (Dragonborn d : dragonborn) {
                if (d.getNome().equals(dragonbornSelecionado)) {
                    TelaConsultarDragonborn telaConsultar = new TelaConsultarDragonborn(this, true, d);
                    telaConsultar.setVisible(true);
                }
            }
            listarDragonborn();

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Dragonborn para Consultar.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void btnMissaoActionPerformed(java.awt.event.ActionEvent evt) {
        TelaAddMissaoDragonborn telaAddMissao = new TelaAddMissaoDragonborn(this, true, jpa);
        telaAddMissao.setVisible(true);
        listarDragonborn();
    }


    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        TelaNovoDragonborn telaNovo = new TelaNovoDragonborn(this, true, jpa);
        telaNovo.setVisible(true);

        listarDragonborn();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        String dragonbornSelecionado = lstDragonborn.getSelectedValue();

        if (dragonbornSelecionado != null) {
            int confirmacao = JOptionPane.showConfirmDialog(this, "Tem certeza de que deseja remover o Dragonborn?", "Confirmação", JOptionPane.YES_NO_OPTION);

            if (confirmacao == JOptionPane.YES_OPTION) {
                try {
                    if (!jpa.conexaoAberta()) {
                        jpa = new PersistenciaJPA();
                    }

                    List<Dragonborn> dragonborn = jpa.getDragonborn();
                    for (Dragonborn d : dragonborn) {
                        if (d.getNome().equals(dragonbornSelecionado)) {
                            jpa.remover(d);
                            break;
                        }
                    }

                    JOptionPane.showMessageDialog(this, "Dragonborn removido com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Erro ao remover o Dragonborn: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                }
                listarDragonborn();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um dragonborn para remover.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDragonborn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDragonborn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDragonborn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDragonborn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDragonborn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnMissao;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDragonborn;
    private javax.swing.JList<String> lstDragonborn;
    // End of variables declaration//GEN-END:variables
}
